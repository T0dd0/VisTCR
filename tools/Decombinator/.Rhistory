source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite("yeastExpData")
biocLite('affy')
biocLite('tcltk')
biocLite('limma')
biocLite('qpcrNorm')
biocLite('ReadqPCR')
install.packages("Rserve")
biocLite('HTqPCR')
biocLite("samr")
biocLite("simpleaffy")
install.packages('HMM')
biocLite("yeastExpData")
library("seqinr")
biocLite("seqinr")
a<-1
run.Rserve
library('Rserve')
run.Rserve
Rserve()
install.packages("Rserve")
install.packages("Rserve")
library('Rserve')
Rserve()
getpwd()
getwd()
Rserve()
Rserve('--no-save')
Rserve()
Rserve()
Rserve(args = '--no-save')
a <- matrix(1:12,3,4)
a
log(a)
a+1
log(a+1)
?dist
?cor
cor(1:10,2:11)
cor(1:10,2:11,method = "pearson")
cor(1:10,2:11,method = "kendall")
a
cor(a)
a[1,1]=3
cor(a)
a
cor(c(3,2,3),c(4,5,6))
cor(c(0,2,3),c(4,5,6))
a[1,1]=0
cor(a)
1:10 > 5
a <- 1:10>5
a
all(a[1:5])
all(a[7:10])
vextor(n=10)
vector(n=10)
vector(length=10)
a <- vector(length=10)
a
a[1]=2
a
a[1:3]<-3
a
?vector
?matrix
matrix(3,4)
matrix(nrow=3,ncol=4)
matrix(0,nrow=3,ncol=4)
debugSource('~/codestudy/r/test_hts.R')
debugSource('~/codestudy/r/test_hts.R')
grep("ATG", myseq)
as.numeric(pos1)
pos1
attributes(pos1)$match.length
pos1[1]
pos1
pos2[[1]]
myseq
nchar(myseq)
substring(myseq[1], c(1,3), c(2,5))
substring(myseq, c(1,4,7), c(2,6,10))
?chartr
myseq
substring(myseq[1], 1:nchar(myseq[1]), 1:nchar(myseq[1]))
strsplit(myseq_comp, "")
debugSource('~/codestudy/r/test_hts.R')
lapply(x, rev)
sapply(x, paste, collapse="")
?sapply
rev('dsfghj')
rev('dsfghj','fg')
rev('dsfghj')
rev(c('dsfghj','fg'))
'asdaf' + 'ddsfaefadg'
'a'+'s'
'a' + 1
library(Biostrings)
BString
DNAString
d <- DNAString("GCATAT-TAC")
d
toString(d)
d[2:6]
d <- DNAString("GCATAT-TACsw")
d
d <- BString("GCATAT-TACsw")
d
d[3:6]
source('~/codestudy/r/test_hts.R')
debugSource('~/codestudy/r/test_hts.R')
dsub
dsub[1:2]
dsub[1]
dsub[[1]]
subject(dsub)
paste(dsub, collapse="_")
attributes(dsub)
dsub$subject
class(dsub)
metdata(dsub)
metadata(dsub)
start(dsub)
end(dsub)
width(dsub)
as.list(dsub)
sapply(as.list(dsub), toString)
dsub == DNAString("ATCGATCC")
dsub[dsub == DNAString("ATCGATCC")]
d <- DNAString("CGCTATCTGACTGCCGCGCC")
d
maskMotif(d, "GC")
m1 <- Mask(mask.width=nchar(d), start=c(1,17), end=c(3,20))
m1
ls()
source('~/codestudy/r/test_hts.R')
debugSource('~/Documents/work/TCR/code/test_barcode.R')
x <- DNAString("AAGCGCGATATG")
library('Biostring')
library('Biostrings')
x <- DNAString("AAGCGCGATATG")
m1 <- matchPattern("GCNNNAT", x)
m1
m2 <- matchPattern("GCNNNAT", x, fixed=FALSE)
m2
as.matrix(m2)
as.matrix(ranges(m2))
vmatchPattern
showMethods("vmatchPattern")
showMethods("matchPattern")
x <- DNAStringSet(c("AAGCGCGATATG","AGCGCGATATG","AGCGCGATATG"))
x
m2 <- vmatchPattern("GCNNNAT", x, fixed=FALSE)
m2
as.matrix(ranges(m2))
as.matrim2)
as.matri(m2)
as.matrix(m2)
as.matrix(m2[[1]])
m2[[1]]
class(m2[[1]])
unclass(m2)
a <- unclass(m2)
a
a[[1]]
1
a
a[1]
x <- c(1,2,3)
y <- c(6,8,10)
z <- lm(x ~ y)
z
unclass(z)
attr(z)
attr(z,'cof')
methods(z)
methods(print)
m2
attr(m2)
attributes(m2)
attr(m2,'ends')
m2
attr(m2,'starts')
attr(m2,'width0')
attr(m2,'width')
debugSource('~/Documents/work/democode/R/go_enrich/Untitled.R')
install.packages('org.Hs.eg.db')
source("http://bioconductor.org/biocLite.R")
biocLite('org.Hs.eg.db')
biocLite('org.Hs.eg.db')
biocLite('org.Hs.eg.db')
（138+107+40+13+48+19)*21
（138+107+40+13+48+19)
(138+107+40+13+48+19)*21
(138+107+40+13+48+19)*21 + 21381
1500*21
(138+107+40+13+48+19)
365+902
2898 + 2247 +756 +21 +63 + 21+147+21+84+525+336+21+21+42+63+399
2898 + 2247 +756 +21 +63 + 21+147+21+84+525+336+21+21+42+63+399 + 21381
1500 * 21
source('~/Documents/work/democode/R/go_enrich/test_enrich.R')
ver()
version()
length(goAnn)
pp <- Rkeys(goAnn)
head(pp)
length(pp)
debugSource('~/Documents/work/democode/R/go_enrich/test_enrich.R')
length(entrezIDs)
entrezIDs
unlist(entrezIDs)
bb <- unlist(entrezIDs)
bb
class(bb)
4^12
library("AnnotationForge")
available.dbschemas()
source("http://bioconductor.org/biocLite.R")
biocLite('org.Rat.eg.db')
update.packages()
source('~/codestudy/r/test_hts.R')
update.packages()
source("http://bioconductor.org/biocLite.R")
biocLite()
update.packages(checkBuilt=TRUE)
packageStatus()
packageStatus()
version
citation("seqLogo")
source("http://bioconductor.org/biocLite.R")
biocLite("seqLogo")
debugSource('~/codestudy/r/test_hts.R')
debugSource('~/codestudy/r/test_hts.R')
rm(list=ls())
source("http://bioconductor.org/biocLite.R")
biocLite("RDAVIDWebService")
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))
library(plyr) # to access round_any
huron$decade <- round_any(huron$year, 10, floor)
h <- ggplot(huron, aes(x=year))
library('ggplot')
library('ggplot2')
# Generate data
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))
library(plyr) # to access round_any
huron$decade <- round_any(huron$year, 10, floor)
h <- ggplot(huron, aes(x=year))
# Add aesthetic mappings
h + geom_ribbon(aes(ymin=level-1, ymax=level+1))
h + geom_ribbon(aes(ymin=level-1, ymax=level+1)) + geom_line(aes(y=level))
# Take out some values in the middle for an example of NA handling
huron[huron$year > 1900 & huron$year < 1910, "level"] <- NA
h <- ggplot(huron, aes(x=year))
h + geom_ribbon(aes(ymin=level-1, ymax=level+1)) + geom_line(aes(y=level))
ls()
ls()
ls
ls()
install.packages('NormqPCR')
install.packages('HMM')
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
biocLite("BiocUpgrade")
cat('\f')
install.packages(' randomForest ')
install.packages('randomForest')
exit
q()
q()
aa=list(a=1,b=4,c='fg')
aa
aa$c=NULL
aa
aa
install.packages('tcR')
install.packages('tcrR')
install.packages("tcR")
exit
q()
licence()
license()
0.5 ／ 0.456
0.5/0.456
1.001/0.912
36.274/22.04
0.5/0.393
4^8
library(zipfR)
data(ItaRi.spc)
View(ItaRi.spc)
View(ItaRi.spc)
summary(ItaRi.spc)
dim(ItaRi.spc)
N(ItaRi.spc)
source('~/Documents/work/TCR/合成克隆/seq20150820/tmpl.R')
sum(((k1$d1 - k1$non) / k1$non)^2)
source('~/Documents/work/TCR/合成克隆/seq20150820/tmpl.R')
source('~/.active-rstudio-document')
?plot
eval({ xx <- pi; xx^2})
eval("x=3")
eval(x=3)
eval({x=3})
pmatch("med", c("mean", "median", "mode"))
pmatch(c("", "ab", "ab"), c("abc", "ab"), dup=FALSE)
pmatch(c("", "ab", "ab"), c("abc", "ab"), dup=TRUE)
list(a=5,b=6)
list('a'=5,'b'=6)
aa = list('a'=5,'b'=6)
aa$a
exit
q()
library('vegan')
?vegdist
source('~/Documents/work/TCR/data/四医大争鸣/test_mitcr.R')
source('~/Documents/work/TCR/data/四医大争鸣/test_mitcr.R')
source('~/Documents/work/TCR/data/四医大争鸣/test_mitcr.R')
q()
library('uiOutput')
library('shiny')
?uiOutput
shiny::runApp('codestudy/shiny/radiant-master/inst/analytics')
?js_head
?do.call
?navbarPage
?uiOutput
?formals
formals(hier_clus)
shiny::runApp('codestudy/shiny/radiant-master/inst/analytics')
uiOutput("hier_clus")
icon("info")
?tabPanel
source('~/codestudy/shiny/ex01.R')
?runApp
source('~/codestudy/shiny/ex01.R')
source('~/codestudy/shiny/ex01.R')
runApp(shinyApp(ui,server))
library(ape)
?read.genBank
?read.GenBank
read.GenBank('NM_003662.3')
aa = read.GenBank('NM_003662.3')
names(aa)
aa['NM_003662.3']
aa[[1]]['NM_003662.3']
aa['NM_003662.3'][[1]]
aa['NM_003662.3']
install.packages('mlxR')
shiny::runApp('Documents/work/TCR/code/shiny_tcr')
library(shinydashboard)
?dashboardHeader
shiny::runApp('Documents/work/TCR/code/shiny_tcr')
source('~/Documents/work/TCR/primer/shiny_template/ui.R')
shiny::runApp('Documents/work/TCR/primer/shiny_template')
shiny::runApp('Documents/work/TCR/primer/shiny_template')
shiny::runApp('Documents/work/TCR/primer/shiny_template')
shiny::runApp('Documents/work/TCR/primer/shiny_template')
shiny::runApp('Documents/work/TCR/primer/shiny_template')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
aa = id(readFasta(fv))
setwd("~/webcode/tcr/tools/Decombinator")
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
nt[1:5]
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
View(cl)
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
View(cl)
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
View(cl)
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
View(cl)
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
nt2aa <- function(nts){
sapply(nts,function(nt){
if( nchar(nt) %% 3 == 0){
aa <- c2s(getTrans(s2c(nt)))
}else{
aa <- '*'
}
aa
})
}
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
??c2s
??c2s
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
View(cdr3)
debugSource('~/webcode/tcr/tools/Decombinator/test_format_result.R')
nt[1:3]
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
setwd("~/webcode/tcr/tools/R")
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
setwd("~/webcode/tcr/tools/Decombinator")
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
source('~/webcode/tcr/tools/R/lib_tcr.R')
source('~/webcode/tcr/tools/R/lib1_tcr.R')
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
source('~/webcode/tcr/tools/Decombinator/test_format_result.R')
grep("-",c('safd-fdsa','dsa*dsf'))
grep("*",c('safd-fdsa','dsa*dsf'))
grep("\\*",c('safd-fdsa','dsa*dsf'))
grep("[-\\*]",c('safd-fdsa','dsa*dsf','afasfas'))
grep("[-\\*]",c('safd-fdsa','dsa*dsf','afasfas'))
?Sys.sleep
Sys.sleep(3)
?lm
lm(1:10,1:10)
lm(1:10 ~ 1:10)
lm((1:10) ~ (1:10))
randn(10)
rand(10)
srand(10)
srand(n1 ~ n2, data.frame(n1=n1,n2=n2))
lm(n1 ~ n2, data.frame(n1=1:10,n2=1:10))
n1=1:10
n2=1:10
lm(n1,n2)
lm(n1 ~ n2)
lm(formula = n1 ~ n2)
